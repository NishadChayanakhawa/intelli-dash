2023-07-09 07:36:08,402 [main] DEBUG IntelliDashApplication - Running with Spring Boot v3.0.6, Spring v6.0.8
2023-07-09 07:36:09,416 [main] DEBUG HikariConfig - Driver class org.h2.Driver found in Thread context class loader jdk.internal.loader.ClassLoaders$AppClassLoader@2a139a55
2023-07-09 07:36:09,437 [main] DEBUG HikariConfig - HikariPool-1 - configuration:
2023-07-09 07:36:09,437 [main] DEBUG HikariConfig - allowPoolSuspension.............false
2023-07-09 07:36:09,437 [main] DEBUG HikariConfig - autoCommit......................true
2023-07-09 07:36:09,437 [main] DEBUG HikariConfig - catalog.........................none
2023-07-09 07:36:09,437 [main] DEBUG HikariConfig - connectionInitSql...............none
2023-07-09 07:36:09,437 [main] DEBUG HikariConfig - connectionTestQuery.............none
2023-07-09 07:36:09,437 [main] DEBUG HikariConfig - connectionTimeout...............30000
2023-07-09 07:36:09,437 [main] DEBUG HikariConfig - dataSource......................none
2023-07-09 07:36:09,437 [main] DEBUG HikariConfig - dataSourceClassName.............none
2023-07-09 07:36:09,437 [main] DEBUG HikariConfig - dataSourceJNDI..................none
2023-07-09 07:36:09,437 [main] DEBUG HikariConfig - dataSourceProperties............{password=<masked>}
2023-07-09 07:36:09,437 [main] DEBUG HikariConfig - driverClassName................."org.h2.Driver"
2023-07-09 07:36:09,437 [main] DEBUG HikariConfig - exceptionOverrideClassName......none
2023-07-09 07:36:09,437 [main] DEBUG HikariConfig - healthCheckProperties...........{}
2023-07-09 07:36:09,437 [main] DEBUG HikariConfig - healthCheckRegistry.............none
2023-07-09 07:36:09,437 [main] DEBUG HikariConfig - idleTimeout.....................600000
2023-07-09 07:36:09,437 [main] DEBUG HikariConfig - initializationFailTimeout.......1
2023-07-09 07:36:09,437 [main] DEBUG HikariConfig - isolateInternalQueries..........false
2023-07-09 07:36:09,437 [main] DEBUG HikariConfig - jdbcUrl.........................jdbc:h2:mem:9c79471c-cc41-494f-8244-f9d0f5053fab;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=FALSE
2023-07-09 07:36:09,437 [main] DEBUG HikariConfig - keepaliveTime...................0
2023-07-09 07:36:09,437 [main] DEBUG HikariConfig - leakDetectionThreshold..........0
2023-07-09 07:36:09,437 [main] DEBUG HikariConfig - maxLifetime.....................1800000
2023-07-09 07:36:09,437 [main] DEBUG HikariConfig - maximumPoolSize.................10
2023-07-09 07:36:09,437 [main] DEBUG HikariConfig - metricRegistry..................none
2023-07-09 07:36:09,437 [main] DEBUG HikariConfig - metricsTrackerFactory...........none
2023-07-09 07:36:09,437 [main] DEBUG HikariConfig - minimumIdle.....................10
2023-07-09 07:36:09,437 [main] DEBUG HikariConfig - password........................<masked>
2023-07-09 07:36:09,437 [main] DEBUG HikariConfig - poolName........................"HikariPool-1"
2023-07-09 07:36:09,437 [main] DEBUG HikariConfig - readOnly........................false
2023-07-09 07:36:09,437 [main] DEBUG HikariConfig - registerMbeans..................false
2023-07-09 07:36:09,437 [main] DEBUG HikariConfig - scheduledExecutor...............none
2023-07-09 07:36:09,437 [main] DEBUG HikariConfig - schema..........................none
2023-07-09 07:36:09,437 [main] DEBUG HikariConfig - threadFactory...................internal
2023-07-09 07:36:09,437 [main] DEBUG HikariConfig - transactionIsolation............default
2023-07-09 07:36:09,437 [main] DEBUG HikariConfig - username........................"admin"
2023-07-09 07:36:09,437 [main] DEBUG HikariConfig - validationTimeout...............5000
2023-07-09 07:36:09,622 [main] DEBUG logging - Logging Provider: org.jboss.logging.Slf4jLoggerProvider found via system property
2023-07-09 07:36:09,659 [main] DEBUG LogHelper - PersistenceUnitInfo [
	name: default
	persistence provider classname: null
	classloader: jdk.internal.loader.ClassLoaders$AppClassLoader@2a139a55
	excludeUnlistedClasses: true
	JTA datasource: null
	Non JTA datasource: HikariDataSource (HikariPool-1)
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/C:/Users/nisha/git/intelli-dash/intelli-dash-webapp/target/classes/
	Shared Cache Mode: UNSPECIFIED
	Validation Mode: AUTO
	Jar files URLs []
	Managed classes names [
		io.github.nishadchayanakhawa.intellidash.model.User]
	Mapping files names []
	Properties []
2023-07-09 07:36:09,671 [HikariPool-1 housekeeper] DEBUG HikariPool - HikariPool-1 - Pool stats (total=1, active=0, idle=1, waiting=0)
2023-07-09 07:36:09,671 [main] DEBUG IntegratorServiceImpl - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2023-07-09 07:36:09,672 [HikariPool-1 connection adder] DEBUG HikariPool - HikariPool-1 - Added connection conn1: url=jdbc:h2:mem:9c79471c-cc41-494f-8244-f9d0f5053fab user=ADMIN
2023-07-09 07:36:09,672 [main] DEBUG IntegratorServiceImpl - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2023-07-09 07:36:09,687 [HikariPool-1 connection adder] DEBUG HikariPool - HikariPool-1 - Added connection conn2: url=jdbc:h2:mem:9c79471c-cc41-494f-8244-f9d0f5053fab user=ADMIN
2023-07-09 07:36:09,703 [HikariPool-1 connection adder] DEBUG HikariPool - HikariPool-1 - Added connection conn3: url=jdbc:h2:mem:9c79471c-cc41-494f-8244-f9d0f5053fab user=ADMIN
2023-07-09 07:36:09,703 [main] DEBUG Environment - HHH000206: hibernate.properties not found
2023-07-09 07:36:09,719 [HikariPool-1 connection adder] DEBUG HikariPool - HikariPool-1 - Added connection conn4: url=jdbc:h2:mem:9c79471c-cc41-494f-8244-f9d0f5053fab user=ADMIN
2023-07-09 07:36:09,735 [HikariPool-1 connection adder] DEBUG HikariPool - HikariPool-1 - Added connection conn5: url=jdbc:h2:mem:9c79471c-cc41-494f-8244-f9d0f5053fab user=ADMIN
2023-07-09 07:36:09,751 [HikariPool-1 connection adder] DEBUG HikariPool - HikariPool-1 - Added connection conn6: url=jdbc:h2:mem:9c79471c-cc41-494f-8244-f9d0f5053fab user=ADMIN
2023-07-09 07:36:09,767 [HikariPool-1 connection adder] DEBUG HikariPool - HikariPool-1 - Added connection conn7: url=jdbc:h2:mem:9c79471c-cc41-494f-8244-f9d0f5053fab user=ADMIN
2023-07-09 07:36:09,783 [HikariPool-1 connection adder] DEBUG HikariPool - HikariPool-1 - Added connection conn8: url=jdbc:h2:mem:9c79471c-cc41-494f-8244-f9d0f5053fab user=ADMIN
2023-07-09 07:36:09,799 [HikariPool-1 connection adder] DEBUG HikariPool - HikariPool-1 - Added connection conn9: url=jdbc:h2:mem:9c79471c-cc41-494f-8244-f9d0f5053fab user=ADMIN
2023-07-09 07:36:09,815 [HikariPool-1 connection adder] DEBUG HikariPool - HikariPool-1 - After adding stats (total=10, active=0, idle=10, waiting=0)
2023-07-09 07:36:09,820 [main] DEBUG factory - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2023-07-09 07:36:09,820 [main] DEBUG factory - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2023-07-09 07:36:09,820 [main] DEBUG factory - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2023-07-09 07:36:09,820 [main] DEBUG factory - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2023-07-09 07:36:09,820 [main] DEBUG factory - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2023-07-09 07:36:09,820 [main] DEBUG factory - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2023-07-09 07:36:09,820 [main] DEBUG factory - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2023-07-09 07:36:09,820 [main] DEBUG factory - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2023-07-09 07:36:09,820 [main] DEBUG factory - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2023-07-09 07:36:09,820 [main] DEBUG factory - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2023-07-09 07:36:09,820 [main] DEBUG factory - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2023-07-09 07:36:09,820 [main] DEBUG factory - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2023-07-09 07:36:09,831 [main] DEBUG RegionFactoryInitiator - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
2023-07-09 07:36:09,831 [main] DEBUG RegionFactoryInitiator - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
2023-07-09 07:36:09,880 [main] DEBUG JdbcTypeRegistry - addDescriptor(FloatTypeDescriptor) replaced previous registration(DoubleTypeDescriptor)
2023-07-09 07:36:09,895 [main] DEBUG BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@7aae1170
2023-07-09 07:36:09,895 [main] DEBUG BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@7aae1170
2023-07-09 07:36:09,895 [main] DEBUG BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@7aae1170
2023-07-09 07:36:09,895 [main] DEBUG BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@4ef5dd23
2023-07-09 07:36:09,895 [main] DEBUG BasicTypeRegistry - Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@4ef5dd23
2023-07-09 07:36:09,895 [main] DEBUG BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.BasicTypeReference@163e8949
2023-07-09 07:36:09,895 [main] DEBUG BasicTypeRegistry - Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@163e8949
2023-07-09 07:36:09,895 [main] DEBUG BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@6eede35e
2023-07-09 07:36:09,895 [main] DEBUG BasicTypeRegistry - Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@6eede35e
2023-07-09 07:36:09,895 [main] DEBUG BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@64c25a62
2023-07-09 07:36:09,895 [main] DEBUG BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@64c25a62
2023-07-09 07:36:09,895 [main] DEBUG BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@64c25a62
2023-07-09 07:36:09,895 [main] DEBUG BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BasicTypeReference@43e8f1c
2023-07-09 07:36:09,895 [main] DEBUG BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@43e8f1c
2023-07-09 07:36:09,895 [main] DEBUG BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BasicTypeReference@43e8f1c
2023-07-09 07:36:09,895 [main] DEBUG BasicTypeRegistry - Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@66a82a13
2023-07-09 07:36:09,895 [main] DEBUG BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@66a82a13
2023-07-09 07:36:09,895 [main] DEBUG BasicTypeRegistry - Adding type registration Byte[] -> org.hibernate.type.BasicTypeReference@66a82a13
2023-07-09 07:36:09,895 [main] DEBUG BasicTypeRegistry - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.BasicTypeReference@66a82a13
2023-07-09 07:36:09,895 [main] DEBUG BasicTypeRegistry - Adding type registration image -> org.hibernate.type.BasicTypeReference@675ec28b
2023-07-09 07:36:09,895 [main] DEBUG BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BasicTypeReference@11399548
2023-07-09 07:36:09,895 [main] DEBUG BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@11399548
2023-07-09 07:36:09,895 [main] DEBUG BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@610fbe1c
2023-07-09 07:36:09,895 [main] DEBUG BasicTypeRegistry - Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@46d0f89c
2023-07-09 07:36:09,895 [main] DEBUG BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@570b2057
2023-07-09 07:36:09,895 [main] DEBUG BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@570b2057
2023-07-09 07:36:09,895 [main] DEBUG BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@570b2057
2023-07-09 07:36:09,895 [main] DEBUG BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.BasicTypeReference@a457c2b
2023-07-09 07:36:09,895 [main] DEBUG BasicTypeRegistry - Adding type registration int -> org.hibernate.type.BasicTypeReference@a457c2b
2023-07-09 07:36:09,895 [main] DEBUG BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@a457c2b
2023-07-09 07:36:09,895 [main] DEBUG BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@16a6dc21
2023-07-09 07:36:09,895 [main] DEBUG BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@16a6dc21
2023-07-09 07:36:09,895 [main] DEBUG BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@16a6dc21
2023-07-09 07:36:09,895 [main] DEBUG BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@5773d271
2023-07-09 07:36:09,895 [main] DEBUG BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@5773d271
2023-07-09 07:36:09,895 [main] DEBUG BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@5773d271
2023-07-09 07:36:09,895 [main] DEBUG BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@59f45950
2023-07-09 07:36:09,895 [main] DEBUG BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@59f45950
2023-07-09 07:36:09,895 [main] DEBUG BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@59f45950
2023-07-09 07:36:09,895 [main] DEBUG BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@7871d261
2023-07-09 07:36:09,895 [main] DEBUG BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@7871d261
2023-07-09 07:36:09,895 [main] DEBUG BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@58164e9a
2023-07-09 07:36:09,895 [main] DEBUG BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@58164e9a
2023-07-09 07:36:09,895 [main] DEBUG BasicTypeRegistry - Adding type registration character -> org.hibernate.type.BasicTypeReference@11bfffb3
2023-07-09 07:36:09,895 [main] DEBUG BasicTypeRegistry - Adding type registration char -> org.hibernate.type.BasicTypeReference@11bfffb3
2023-07-09 07:36:09,895 [main] DEBUG BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@11bfffb3
2023-07-09 07:36:09,895 [main] DEBUG BasicTypeRegistry - Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@6a7a1a0d
2023-07-09 07:36:09,895 [main] DEBUG BasicTypeRegistry - Adding type registration string -> org.hibernate.type.BasicTypeReference@1c6e3ff9
2023-07-09 07:36:09,895 [main] DEBUG BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@1c6e3ff9
2023-07-09 07:36:09,895 [main] DEBUG BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.BasicTypeReference@76e6c070
2023-07-09 07:36:09,895 [main] DEBUG BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.BasicTypeReference@184afb78
2023-07-09 07:36:09,895 [main] DEBUG BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.BasicTypeReference@184afb78
2023-07-09 07:36:09,895 [main] DEBUG BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.BasicTypeReference@184afb78
2023-07-09 07:36:09,895 [main] DEBUG BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@22da200e
2023-07-09 07:36:09,895 [main] DEBUG BasicTypeRegistry - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.BasicTypeReference@22da200e
2023-07-09 07:36:09,895 [main] DEBUG BasicTypeRegistry - Adding type registration Character[] -> org.hibernate.type.BasicTypeReference@22da200e
2023-07-09 07:36:09,895 [main] DEBUG BasicTypeRegistry - Adding type registration text -> org.hibernate.type.BasicTypeReference@4f26425b
2023-07-09 07:36:09,895 [main] DEBUG BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.BasicTypeReference@f03ee8f
2023-07-09 07:36:09,895 [main] DEBUG BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.BasicTypeReference@40dd552c
2023-07-09 07:36:09,895 [main] DEBUG BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@40dd552c
2023-07-09 07:36:09,895 [main] DEBUG BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.BasicTypeReference@33f4c769
2023-07-09 07:36:09,895 [main] DEBUG BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@33f4c769
2023-07-09 07:36:09,895 [main] DEBUG BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@4ebd6fd6
2023-07-09 07:36:09,895 [main] DEBUG BasicTypeRegistry - Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@5e5a8718
2023-07-09 07:36:09,895 [main] DEBUG BasicTypeRegistry - Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@7404ddca
2023-07-09 07:36:09,895 [main] DEBUG BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@615e83ac
2023-07-09 07:36:09,895 [main] DEBUG BasicTypeRegistry - Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@4438938e
2023-07-09 07:36:09,895 [main] DEBUG BasicTypeRegistry - Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@4e50ae56
2023-07-09 07:36:09,895 [main] DEBUG BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.BasicTypeReference@1c68d0db
2023-07-09 07:36:09,895 [main] DEBUG BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@1c68d0db
2023-07-09 07:36:09,895 [main] DEBUG BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@9be7319
2023-07-09 07:36:09,895 [main] DEBUG BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@9be7319
2023-07-09 07:36:09,895 [main] DEBUG BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@91a2543
2023-07-09 07:36:09,895 [main] DEBUG BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@91a2543
2023-07-09 07:36:09,895 [main] DEBUG BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@42730828
2023-07-09 07:36:09,895 [main] DEBUG BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@42730828
2023-07-09 07:36:09,900 [main] DEBUG BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@18c7f6b5
2023-07-09 07:36:09,900 [main] DEBUG BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@18c7f6b5
2023-07-09 07:36:09,900 [main] DEBUG BasicTypeRegistry - Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@629b780f
2023-07-09 07:36:09,900 [main] DEBUG BasicTypeRegistry - Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@3af36922
2023-07-09 07:36:09,900 [main] DEBUG BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@609b041c
2023-07-09 07:36:09,900 [main] DEBUG BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@609b041c
2023-07-09 07:36:09,900 [main] DEBUG BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@474e34e4
2023-07-09 07:36:09,900 [main] DEBUG BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@474e34e4
2023-07-09 07:36:09,900 [main] DEBUG BasicTypeRegistry - Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@7e2c6702
2023-07-09 07:36:09,900 [main] DEBUG BasicTypeRegistry - Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@5fb7ab9c
2023-07-09 07:36:09,900 [main] DEBUG BasicTypeRegistry - Adding type registration date -> org.hibernate.type.BasicTypeReference@6734ff92
2023-07-09 07:36:09,900 [main] DEBUG BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@6734ff92
2023-07-09 07:36:09,900 [main] DEBUG BasicTypeRegistry - Adding type registration time -> org.hibernate.type.BasicTypeReference@51eb0e84
2023-07-09 07:36:09,900 [main] DEBUG BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@51eb0e84
2023-07-09 07:36:09,900 [main] DEBUG BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@4ce267cc
2023-07-09 07:36:09,900 [main] DEBUG BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@4ce267cc
2023-07-09 07:36:09,900 [main] DEBUG BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@4ce267cc
2023-07-09 07:36:09,900 [main] DEBUG BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.BasicTypeReference@2eebce87
2023-07-09 07:36:09,900 [main] DEBUG BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@2eebce87
2023-07-09 07:36:09,900 [main] DEBUG BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@2eebce87
2023-07-09 07:36:09,900 [main] DEBUG BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@6ee37ca7
2023-07-09 07:36:09,900 [main] DEBUG BasicTypeRegistry - Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@6775c0d1
2023-07-09 07:36:09,900 [main] DEBUG BasicTypeRegistry - Adding type registration instant -> org.hibernate.type.BasicTypeReference@38f617f4
2023-07-09 07:36:09,900 [main] DEBUG BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@38f617f4
2023-07-09 07:36:09,900 [main] DEBUG BasicTypeRegistry - Adding type registration uuid -> org.hibernate.type.BasicTypeReference@4899799b
2023-07-09 07:36:09,900 [main] DEBUG BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@4899799b
2023-07-09 07:36:09,900 [main] DEBUG BasicTypeRegistry - Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@4899799b
2023-07-09 07:36:09,900 [main] DEBUG BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@3dea226b
2023-07-09 07:36:09,900 [main] DEBUG BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@74500e4f
2023-07-09 07:36:09,900 [main] DEBUG BasicTypeRegistry - Adding type registration class -> org.hibernate.type.BasicTypeReference@7c91fe86
2023-07-09 07:36:09,900 [main] DEBUG BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@7c91fe86
2023-07-09 07:36:09,900 [main] DEBUG BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.BasicTypeReference@7fc7152e
2023-07-09 07:36:09,900 [main] DEBUG BasicTypeRegistry - Adding type registration Currency -> org.hibernate.type.BasicTypeReference@7fc7152e
2023-07-09 07:36:09,900 [main] DEBUG BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@7fc7152e
2023-07-09 07:36:09,900 [main] DEBUG BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.BasicTypeReference@13d289c7
2023-07-09 07:36:09,900 [main] DEBUG BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@13d289c7
2023-07-09 07:36:09,900 [main] DEBUG BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.BasicTypeReference@6704df84
2023-07-09 07:36:09,900 [main] DEBUG BasicTypeRegistry - Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@6704df84
2023-07-09 07:36:09,900 [main] DEBUG BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.BasicTypeReference@1412682c
2023-07-09 07:36:09,900 [main] DEBUG BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@1412682c
2023-07-09 07:36:09,900 [main] DEBUG BasicTypeRegistry - Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@53bb71e5
2023-07-09 07:36:09,900 [main] DEBUG BasicTypeRegistry - Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@53bb71e5
2023-07-09 07:36:09,900 [main] DEBUG BasicTypeRegistry - Adding type registration url -> org.hibernate.type.BasicTypeReference@54a056e4
2023-07-09 07:36:09,900 [main] DEBUG BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@54a056e4
2023-07-09 07:36:09,900 [main] DEBUG BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.BasicTypeReference@15994b0b
2023-07-09 07:36:09,900 [main] DEBUG BasicTypeRegistry - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@75ed125a
2023-07-09 07:36:09,900 [main] DEBUG BasicTypeRegistry - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@75ed125a
2023-07-09 07:36:09,900 [main] DEBUG BasicTypeRegistry - Adding type registration object -> org.hibernate.type.JavaObjectType@3d512652
2023-07-09 07:36:09,900 [main] DEBUG BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@3d512652
2023-07-09 07:36:09,900 [main] DEBUG BasicTypeRegistry - Adding type registration null -> org.hibernate.type.NullType@781c2497
2023-07-09 07:36:09,900 [main] DEBUG BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@b75b890
2023-07-09 07:36:09,900 [main] DEBUG BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@70c491b8
2023-07-09 07:36:09,900 [main] DEBUG BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@439d545c
2023-07-09 07:36:09,900 [main] DEBUG BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@5a3cf824
2023-07-09 07:36:09,900 [main] DEBUG BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@7c2b6acb
2023-07-09 07:36:09,900 [main] DEBUG BasicTypeRegistry - Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@28367da7
2023-07-09 07:36:09,900 [main] DEBUG BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@1a0f349
2023-07-09 07:36:09,900 [main] DEBUG BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@3c60c681
2023-07-09 07:36:09,900 [main] DEBUG BootstrapContextImpl - Injecting JPA temp ClassLoader [org.springframework.instrument.classloading.SimpleThrowawayClassLoader@33751d49] into BootstrapContext; was [null]
2023-07-09 07:36:09,900 [main] DEBUG ClassLoaderAccessImpl - ClassLoaderAccessImpl#injectTempClassLoader(org.springframework.instrument.classloading.SimpleThrowawayClassLoader@33751d49) [was null]
2023-07-09 07:36:09,900 [main] DEBUG BootstrapContextImpl - Injecting ScanEnvironment [org.hibernate.jpa.boot.internal.StandardJpaScanEnvironmentImpl@60dcf9ec] into BootstrapContext; was [null]
2023-07-09 07:36:09,900 [main] DEBUG BootstrapContextImpl - Injecting ScanOptions [org.hibernate.boot.archive.scan.internal.StandardScanOptions@7606bd03] into BootstrapContext; was [org.hibernate.boot.archive.scan.internal.StandardScanOptions@afee63]
2023-07-09 07:36:09,911 [main] DEBUG BootstrapContextImpl - Injecting JPA temp ClassLoader [null] into BootstrapContext; was [org.springframework.instrument.classloading.SimpleThrowawayClassLoader@33751d49]
2023-07-09 07:36:09,911 [main] DEBUG ClassLoaderAccessImpl - ClassLoaderAccessImpl#injectTempClassLoader(null) [was org.springframework.instrument.classloading.SimpleThrowawayClassLoader@33751d49]
2023-07-09 07:36:09,930 [main] DEBUG JdbcEnvironmentInitiator - Database ->
       name : H2
    version : 2.1.214 (2022-06-13)
      major : 2
      minor : 1
2023-07-09 07:36:09,930 [main] DEBUG JdbcEnvironmentInitiator - Driver ->
       name : H2 JDBC Driver
    version : 2.1.214 (2022-06-13)
      major : 2
      minor : 1
2023-07-09 07:36:09,930 [main] DEBUG JdbcEnvironmentInitiator - JDBC version : 4.2
2023-07-09 07:36:09,943 [main] DEBUG IdentifierHelperBuilder - JDBC driver metadata reported database stores quoted identifiers in neither upper, lower nor mixed case
2023-07-09 07:36:09,950 [main] DEBUG JdbcTypeRegistry - addDescriptor(NCharTypeDescriptor) replaced previous registration(CharTypeDescriptor)
2023-07-09 07:36:09,950 [main] DEBUG JdbcTypeRegistry - addDescriptor(NVarcharTypeDescriptor) replaced previous registration(VarcharTypeDescriptor)
2023-07-09 07:36:09,959 [main] DEBUG JdbcTypeRegistry - addDescriptor(LongNVarcharTypeDescriptor) replaced previous registration(LongVarcharTypeDescriptor)
2023-07-09 07:36:09,960 [main] DEBUG JdbcTypeRegistry - addDescriptor(NClobTypeDescriptor(DEFAULT)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2023-07-09 07:36:09,960 [main] DEBUG JdbcTypeRegistry - addDescriptor(2005, ClobTypeDescriptor(STREAM_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2023-07-09 07:36:09,960 [main] DEBUG JdbcTypeRegistry - addDescriptor(3003, TimestampUtcDescriptor) replaced previous registration(TimestampUtcDescriptor)
2023-07-09 07:36:09,960 [main] DEBUG BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@1(java.time.OffsetDateTime,93)
2023-07-09 07:36:09,960 [main] DEBUG BasicTypeRegistry - Adding type registration OffsetDateTime -> basicType@1(java.time.OffsetDateTime,93)
2023-07-09 07:36:09,960 [main] DEBUG BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> basicType@1(java.time.OffsetDateTime,93)
2023-07-09 07:36:09,960 [main] DEBUG BasicTypeRegistry - Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@2(java.time.ZonedDateTime,93)
2023-07-09 07:36:09,960 [main] DEBUG BasicTypeRegistry - Adding type registration ZonedDateTime -> basicType@2(java.time.ZonedDateTime,93)
2023-07-09 07:36:09,960 [main] DEBUG BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> basicType@2(java.time.ZonedDateTime,93)
2023-07-09 07:36:09,960 [main] DEBUG TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@4d290757] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@720a1fd0]
2023-07-09 07:36:09,980 [main] DEBUG Namespace - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2023-07-09 07:36:10,000 [main] DEBUG EntityBinder - Binding entity from annotated class: io.github.nishadchayanakhawa.intellidash.model.User
2023-07-09 07:36:10,008 [main] DEBUG AnnotatedColumn - Binding column: DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2023-07-09 07:36:10,010 [main] DEBUG EntityBinder - Import with entity name User
2023-07-09 07:36:10,010 [main] DEBUG EntityBinder - Bind entity io.github.nishadchayanakhawa.intellidash.model.User on table users
2023-07-09 07:36:10,024 [main] DEBUG AnnotatedColumn - Binding column: Column{table=Table(users), mappingColumn=username, insertable=true, updatable=true, unique=false}
2023-07-09 07:36:10,024 [main] DEBUG ClassLoaderAccessImpl - Not known whether passed class name [io.github.nishadchayanakhawa.intellidash.model.User] is safe
2023-07-09 07:36:10,024 [main] DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : io.github.nishadchayanakhawa.intellidash.model.User
2023-07-09 07:36:10,024 [main] DEBUG PropertyBinder - MetadataSourceProcessor property username with lazy=false
2023-07-09 07:36:10,030 [main] DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [io.github.nishadchayanakhawa.intellidash.model.User:username]
2023-07-09 07:36:10,030 [main] DEBUG BasicValueBinder - building BasicValue for username
2023-07-09 07:36:10,030 [main] DEBUG BasicValue - Skipping column re-registration: users.username
2023-07-09 07:36:10,030 [main] DEBUG PropertyBinder - Building property username
2023-07-09 07:36:10,030 [main] DEBUG BinderHelper - #makeIdGenerator(BasicValue([Column(username)]), username, assigned, , ...)
2023-07-09 07:36:10,030 [main] DEBUG AnnotatedColumn - Binding column: Column{table=Table(users), mappingColumn=email, insertable=true, updatable=true, unique=false}
2023-07-09 07:36:10,030 [main] DEBUG PropertyBinder - MetadataSourceProcessor property email with lazy=false
2023-07-09 07:36:10,030 [main] DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [io.github.nishadchayanakhawa.intellidash.model.User:email]
2023-07-09 07:36:10,030 [main] DEBUG BasicValueBinder - building BasicValue for email
2023-07-09 07:36:10,030 [main] DEBUG BasicValue - Skipping column re-registration: users.email
2023-07-09 07:36:10,030 [main] DEBUG PropertyBinder - Building property email
2023-07-09 07:36:10,030 [main] DEBUG AnnotatedColumn - Binding column: Column{table=Table(users), mappingColumn=first_name, insertable=true, updatable=true, unique=false}
2023-07-09 07:36:10,030 [main] DEBUG PropertyBinder - MetadataSourceProcessor property firstName with lazy=false
2023-07-09 07:36:10,030 [main] DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [io.github.nishadchayanakhawa.intellidash.model.User:firstName]
2023-07-09 07:36:10,030 [main] DEBUG BasicValueBinder - building BasicValue for firstName
2023-07-09 07:36:10,030 [main] DEBUG BasicValue - Skipping column re-registration: users.first_name
2023-07-09 07:36:10,030 [main] DEBUG PropertyBinder - Building property firstName
2023-07-09 07:36:10,030 [main] DEBUG AnnotatedColumn - Binding column: Column{table=Table(users), mappingColumn=last_name, insertable=true, updatable=true, unique=false}
2023-07-09 07:36:10,030 [main] DEBUG PropertyBinder - MetadataSourceProcessor property lastName with lazy=false
2023-07-09 07:36:10,030 [main] DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [io.github.nishadchayanakhawa.intellidash.model.User:lastName]
2023-07-09 07:36:10,030 [main] DEBUG BasicValueBinder - building BasicValue for lastName
2023-07-09 07:36:10,030 [main] DEBUG BasicValue - Skipping column re-registration: users.last_name
2023-07-09 07:36:10,030 [main] DEBUG PropertyBinder - Building property lastName
2023-07-09 07:36:10,030 [main] DEBUG AnnotatedColumn - Binding column: Column{table=Table(users), mappingColumn=password, insertable=true, updatable=true, unique=false}
2023-07-09 07:36:10,030 [main] DEBUG PropertyBinder - MetadataSourceProcessor property password with lazy=false
2023-07-09 07:36:10,030 [main] DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [io.github.nishadchayanakhawa.intellidash.model.User:password]
2023-07-09 07:36:10,030 [main] DEBUG BasicValueBinder - building BasicValue for password
2023-07-09 07:36:10,030 [main] DEBUG BasicValue - Skipping column re-registration: users.password
2023-07-09 07:36:10,040 [main] DEBUG PropertyBinder - Building property password
2023-07-09 07:36:10,040 [main] DEBUG AnnotatedColumn - Binding column: Column{table=Table(users), mappingColumn=role, insertable=true, updatable=true, unique=false}
2023-07-09 07:36:10,040 [main] DEBUG PropertyBinder - MetadataSourceProcessor property role with lazy=false
2023-07-09 07:36:10,040 [main] DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [io.github.nishadchayanakhawa.intellidash.model.User:role]
2023-07-09 07:36:10,040 [main] DEBUG BasicValueBinder - building BasicValue for role
2023-07-09 07:36:10,040 [main] DEBUG BasicValue - Skipping column re-registration: users.role
2023-07-09 07:36:10,040 [main] DEBUG PropertyBinder - Building property role
2023-07-09 07:36:10,040 [main] DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for username
2023-07-09 07:36:10,040 [main] DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for email
2023-07-09 07:36:10,040 [main] DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for firstName
2023-07-09 07:36:10,040 [main] DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for lastName
2023-07-09 07:36:10,040 [main] DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for password
2023-07-09 07:36:10,040 [main] DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for role
2023-07-09 07:36:10,040 [main] DEBUG PrimaryKey - Forcing column [username] to be non-null as it is part of the primary key for table [users]
2023-07-09 07:36:10,070 [main] DEBUG SessionFactoryImpl - Building session factory
2023-07-09 07:36:10,091 [main] DEBUG SessionFactoryServiceRegistryImpl - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
2023-07-09 07:36:10,101 [main] DEBUG SessionFactoryImpl - Session factory constructed with filter configurations : {}
2023-07-09 07:36:10,101 [main] DEBUG SessionFactoryImpl - Instantiating session factory with properties: {java.specification.version=17, sun.cpu.isalist=amd64, hibernate.resource.beans.container=org.springframework.orm.hibernate5.SpringBeanContainer@37d3aa8c, hibernate.connection.handling_mode=DELAYED_ACQUISITION_AND_HOLD, sun.jnu.encoding=Cp1252, hibernate.dialect=org.hibernate.dialect.H2Dialect, hibernate.implicit_naming_strategy=org.springframework.boot.orm.jpa.hibernate.SpringImplicitNamingStrategy, java.class.path=C:\Users\nisha\git\intelli-dash\intelli-dash-webapp\target\classes;C:\Users\nisha\.m2\repository\org\springframework\boot\spring-boot\3.0.6\spring-boot-3.0.6.jar;C:\Users\nisha\.m2\repository\org\springframework\boot\spring-boot-autoconfigure\3.0.6\spring-boot-autoconfigure-3.0.6.jar;C:\Users\nisha\.m2\repository\ch\qos\logback\logback-classic\1.4.7\logback-classic-1.4.7.jar;C:\Users\nisha\.m2\repository\ch\qos\logback\logback-core\1.4.7\logback-core-1.4.7.jar;C:\Users\nisha\.m2\repository\org\apache\logging\log4j\log4j-to-slf4j\2.19.0\log4j-to-slf4j-2.19.0.jar;C:\Users\nisha\.m2\repository\org\apache\logging\log4j\log4j-api\2.19.0\log4j-api-2.19.0.jar;C:\Users\nisha\.m2\repository\org\slf4j\jul-to-slf4j\2.0.7\jul-to-slf4j-2.0.7.jar;C:\Users\nisha\.m2\repository\jakarta\annotation\jakarta.annotation-api\2.1.1\jakarta.annotation-api-2.1.1.jar;C:\Users\nisha\.m2\repository\org\yaml\snakeyaml\1.33\snakeyaml-1.33.jar;C:\Users\nisha\.m2\repository\com\fasterxml\jackson\core\jackson-databind\2.14.2\jackson-databind-2.14.2.jar;C:\Users\nisha\.m2\repository\com\fasterxml\jackson\core\jackson-annotations\2.14.2\jackson-annotations-2.14.2.jar;C:\Users\nisha\.m2\repository\com\fasterxml\jackson\core\jackson-core\2.14.2\jackson-core-2.14.2.jar;C:\Users\nisha\.m2\repository\com\fasterxml\jackson\datatype\jackson-datatype-jdk8\2.14.2\jackson-datatype-jdk8-2.14.2.jar;C:\Users\nisha\.m2\repository\com\fasterxml\jackson\datatype\jackson-datatype-jsr310\2.14.2\jackson-datatype-jsr310-2.14.2.jar;C:\Users\nisha\.m2\repository\com\fasterxml\jackson\module\jackson-module-parameter-names\2.14.2\jackson-module-parameter-names-2.14.2.jar;C:\Users\nisha\.m2\repository\org\apache\tomcat\embed\tomcat-embed-core\10.1.8\tomcat-embed-core-10.1.8.jar;C:\Users\nisha\.m2\repository\org\apache\tomcat\embed\tomcat-embed-el\10.1.8\tomcat-embed-el-10.1.8.jar;C:\Users\nisha\.m2\repository\org\apache\tomcat\embed\tomcat-embed-websocket\10.1.8\tomcat-embed-websocket-10.1.8.jar;C:\Users\nisha\.m2\repository\org\springframework\spring-web\6.0.8\spring-web-6.0.8.jar;C:\Users\nisha\.m2\repository\org\springframework\spring-beans\6.0.8\spring-beans-6.0.8.jar;C:\Users\nisha\.m2\repository\io\micrometer\micrometer-observation\1.10.6\micrometer-observation-1.10.6.jar;C:\Users\nisha\.m2\repository\io\micrometer\micrometer-commons\1.10.6\micrometer-commons-1.10.6.jar;C:\Users\nisha\.m2\repository\org\springframework\spring-webmvc\6.0.8\spring-webmvc-6.0.8.jar;C:\Users\nisha\.m2\repository\org\springframework\spring-context\6.0.8\spring-context-6.0.8.jar;C:\Users\nisha\.m2\repository\org\springframework\spring-expression\6.0.8\spring-expression-6.0.8.jar;C:\Users\nisha\.m2\repository\org\aspectj\aspectjweaver\1.9.19\aspectjweaver-1.9.19.jar;C:\Users\nisha\.m2\repository\com\zaxxer\HikariCP\5.0.1\HikariCP-5.0.1.jar;C:\Users\nisha\.m2\repository\org\springframework\spring-jdbc\6.0.8\spring-jdbc-6.0.8.jar;C:\Users\nisha\.m2\repository\org\hibernate\orm\hibernate-core\6.1.7.Final\hibernate-core-6.1.7.Final.jar;C:\Users\nisha\.m2\repository\jakarta\persistence\jakarta.persistence-api\3.1.0\jakarta.persistence-api-3.1.0.jar;C:\Users\nisha\.m2\repository\jakarta\transaction\jakarta.transaction-api\2.0.1\jakarta.transaction-api-2.0.1.jar;C:\Users\nisha\.m2\repository\org\jboss\logging\jboss-logging\3.5.0.Final\jboss-logging-3.5.0.Final.jar;C:\Users\nisha\.m2\repository\org\hibernate\common\hibernate-commons-annotations\6.0.6.Final\hibernate-commons-annotations-6.0.6.Final.jar;C:\Users\nisha\.m2\repository\org\jboss\jandex\2.4.2.Final\jandex-2.4.2.Final.jar;C:\Users\nisha\.m2\repository\com\fasterxml\classmate\1.5.1\classmate-1.5.1.jar;C:\Users\nisha\.m2\repository\net\bytebuddy\byte-buddy\1.12.23\byte-buddy-1.12.23.jar;C:\Users\nisha\.m2\repository\org\glassfish\jaxb\jaxb-runtime\4.0.2\jaxb-runtime-4.0.2.jar;C:\Users\nisha\.m2\repository\org\glassfish\jaxb\jaxb-core\4.0.2\jaxb-core-4.0.2.jar;C:\Users\nisha\.m2\repository\org\eclipse\angus\angus-activation\2.0.0\angus-activation-2.0.0.jar;C:\Users\nisha\.m2\repository\org\glassfish\jaxb\txw2\4.0.2\txw2-4.0.2.jar;C:\Users\nisha\.m2\repository\com\sun\istack\istack-commons-runtime\4.1.1\istack-commons-runtime-4.1.1.jar;C:\Users\nisha\.m2\repository\jakarta\inject\jakarta.inject-api\2.0.0\jakarta.inject-api-2.0.0.jar;C:\Users\nisha\.m2\repository\org\antlr\antlr4-runtime\4.10.1\antlr4-runtime-4.10.1.jar;C:\Users\nisha\.m2\repository\org\springframework\data\spring-data-jpa\3.0.5\spring-data-jpa-3.0.5.jar;C:\Users\nisha\.m2\repository\org\springframework\data\spring-data-commons\3.0.5\spring-data-commons-3.0.5.jar;C:\Users\nisha\.m2\repository\org\springframework\spring-orm\6.0.8\spring-orm-6.0.8.jar;C:\Users\nisha\.m2\repository\org\springframework\spring-tx\6.0.8\spring-tx-6.0.8.jar;C:\Users\nisha\.m2\repository\org\springframework\spring-aspects\6.0.8\spring-aspects-6.0.8.jar;C:\Users\nisha\.m2\repository\org\thymeleaf\thymeleaf-spring6\3.1.1.RELEASE\thymeleaf-spring6-3.1.1.RELEASE.jar;C:\Users\nisha\.m2\repository\org\thymeleaf\thymeleaf\3.1.1.RELEASE\thymeleaf-3.1.1.RELEASE.jar;C:\Users\nisha\.m2\repository\org\attoparser\attoparser\2.0.6.RELEASE\attoparser-2.0.6.RELEASE.jar;C:\Users\nisha\.m2\repository\org\unbescape\unbescape\1.1.6.RELEASE\unbescape-1.1.6.RELEASE.jar;C:\Users\nisha\.m2\repository\org\springframework\spring-aop\6.0.8\spring-aop-6.0.8.jar;C:\Users\nisha\.m2\repository\org\springframework\security\spring-security-config\6.0.3\spring-security-config-6.0.3.jar;C:\Users\nisha\.m2\repository\org\springframework\security\spring-security-web\6.0.3\spring-security-web-6.0.3.jar;C:\Users\nisha\.m2\repository\org\thymeleaf\extras\thymeleaf-extras-springsecurity6\3.1.1.RELEASE\thymeleaf-extras-springsecurity6-3.1.1.RELEASE.jar;C:\Users\nisha\.m2\repository\org\slf4j\slf4j-api\2.0.7\slf4j-api-2.0.7.jar;C:\Users\nisha\.m2\repository\org\modelmapper\modelmapper\3.1.0\modelmapper-3.1.0.jar;C:\Users\nisha\.m2\repository\com\h2database\h2\2.1.214\h2-2.1.214.jar;C:\Users\nisha\.m2\repository\jakarta\xml\bind\jakarta.xml.bind-api\4.0.0\jakarta.xml.bind-api-4.0.0.jar;C:\Users\nisha\.m2\repository\jakarta\activation\jakarta.activation-api\2.1.1\jakarta.activation-api-2.1.1.jar;C:\Users\nisha\.m2\repository\org\springframework\spring-core\6.0.8\spring-core-6.0.8.jar;C:\Users\nisha\.m2\repository\org\springframework\spring-jcl\6.0.8\spring-jcl-6.0.8.jar;C:\Users\nisha\.m2\repository\org\springframework\security\spring-security-core\6.0.3\spring-security-core-6.0.3.jar;C:\Users\nisha\.m2\repository\org\springframework\security\spring-security-crypto\6.0.3\spring-security-crypto-6.0.3.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, user.variant=, java.vendor.url=https://java.oracle.com/, catalina.useNaming=false, user.timezone=Asia/Calcutta, jakarta.persistence.sharedCache.mode=UNSPECIFIED, org.jboss.logging.provider=slf4j, java.vm.specification.version=17, os.name=Windows 11, jakarta.persistence.nonJtaDataSource=HikariDataSource (HikariPool-1), sun.java.launcher=SUN_STANDARD, user.country=IN, sun.boot.library.path=C:\Program Files\Java\jdk-17\bin, sun.java.command=io.github.nishadchayanakhawa.intellidash.IntelliDashApplication, javax.persistence.nonJtaDataSource=HikariDataSource (HikariPool-1), hibernate.transaction.jta.platform=org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform@5dd747c1, jdk.debug=release, sun.cpu.endian=little, user.home=C:\Users\nisha, user.language=en, sun.stderr.encoding=cp437, java.specification.vendor=Oracle Corporation, java.version.date=2023-04-18, java.home=C:\Program Files\Java\jdk-17, file.separator=\, java.vm.compressedOopsMode=32-bit, line.separator=
, sun.stdout.encoding=cp437, hibernate.persistenceUnitName=default, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, FILE_LOG_CHARSET=windows-1252, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, java.awt.headless=true, jakarta.persistence.validation.mode=AUTO, hibernate.hbm2ddl.auto=update, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=17.0.7+8-LTS-224, user.name=nisha, path.separator=;, os.version=10.0, java.runtime.name=Java(TM) SE Runtime Environment, file.encoding=Cp1252, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, java.vendor.url.bug=https://bugreport.java.com/bugreport/, java.io.tmpdir=C:\Users\nisha\AppData\Local\Temp\, com.zaxxer.hikari.pool_number=1, catalina.home=C:\Users\nisha\AppData\Local\Temp\tomcat.8999.5895642248477215248, java.version=17.0.7, hibernate.physical_naming_strategy=org.hibernate.boot.model.naming.CamelCaseToUnderscoresNamingStrategy, user.dir=C:\Users\nisha\git\intelli-dash\intelli-dash-webapp, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, PID=20824, sun.os.patch.level=, CONSOLE_LOG_CHARSET=windows-1252, catalina.base=C:\Users\nisha\AppData\Local\Temp\tomcat.8999.5895642248477215248, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.registry.StandardServiceRegistryBuilder$1@1bdafb01, native.encoding=Cp1252, java.library.path=C:\Program Files\Java\jdk-17\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\Program Files\Common Files\Oracle\Java\javapath;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Windows\System32;C:\Windows;C:\Windows\System32\wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;C:\Program Files\dotnet\;C:\Program Files\Maven\apache-maven-3.9.1\bin;C:\Program Files\PuTTY\;C:\Program Files (x86)\GnuPG\bin;C:\Program Files\Docker\Docker\resources\bin;C:\Users\nisha\AppData\Local\Microsoft\WindowsApps;., java.vendor=Oracle Corporation, java.vm.info=mixed mode, emulated-client, sharing, java.vm.version=17.0.7+8-LTS-224, hibernate.bytecode.use_reflection_optimizer=false, sun.io.unicode.encoding=UnicodeLittle, hibernate.archive.scanner=org.hibernate.boot.archive.scan.internal.DisabledScanner, hibernate.connection.datasource=HikariDataSource (HikariPool-1), java.class.version=61.0}
2023-07-09 07:36:10,103 [main] DEBUG SessionFactoryImpl - Instantiated session factory
2023-07-09 07:36:10,111 [main] DEBUG cache - Starting QueryPlanCache(2048)
2023-07-09 07:36:10,151 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(max)] under max; prior registration was null
2023-07-09 07:36:10,161 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(min)] under min; prior registration was null
2023-07-09 07:36:10,161 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sum)] under sum; prior registration was null
2023-07-09 07:36:10,161 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(avg)] under avg; prior registration was null
2023-07-09 07:36:10,161 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CountFunction@53ba25ff] under count; prior registration was null
2023-07-09 07:36:10,161 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@36665c11] under every; prior registration was null
2023-07-09 07:36:10,161 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@6e49b011] under any; prior registration was null
2023-07-09 07:36:10,161 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(round)] under round; prior registration was null
2023-07-09 07:36:10,161 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(floor)] under floor; prior registration was null
2023-07-09 07:36:10,161 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ceiling)] under ceiling; prior registration was null
2023-07-09 07:36:10,161 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(mod)] under mod; prior registration was null
2023-07-09 07:36:10,161 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(abs)] under abs; prior registration was null
2023-07-09 07:36:10,161 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sign)] under sign; prior registration was null
2023-07-09 07:36:10,161 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sqrt)] under sqrt; prior registration was null
2023-07-09 07:36:10,161 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ln)] under ln; prior registration was null
2023-07-09 07:36:10,161 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(exp)] under exp; prior registration was null
2023-07-09 07:36:10,161 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(power)] under power; prior registration was null
2023-07-09 07:36:10,161 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sin)] under sin; prior registration was null
2023-07-09 07:36:10,161 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cos)] under cos; prior registration was null
2023-07-09 07:36:10,161 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(tan)] under tan; prior registration was null
2023-07-09 07:36:10,161 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(asin)] under asin; prior registration was null
2023-07-09 07:36:10,161 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(acos)] under acos; prior registration was null
2023-07-09 07:36:10,161 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan)] under atan; prior registration was null
2023-07-09 07:36:10,161 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan2)] under atan2; prior registration was null
2023-07-09 07:36:10,161 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(coalesce)] under coalesce; prior registration was null
2023-07-09 07:36:10,161 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(nullif)] under nullif; prior registration was null
2023-07-09 07:36:10,161 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(left)] under left; prior registration was null
2023-07-09 07:36:10,161 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(right)] under right; prior registration was null
2023-07-09 07:36:10,161 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(replace)] under replace; prior registration was null
2023-07-09 07:36:10,161 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(concat)] under concat; prior registration was null
2023-07-09 07:36:10,161 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lower)] under lower; prior registration was null
2023-07-09 07:36:10,161 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(upper)] under upper; prior registration was null
2023-07-09 07:36:10,161 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substring)] under substring; prior registration was null
2023-07-09 07:36:10,161 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(locate)] under locate; prior registration was null
2023-07-09 07:36:10,161 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(character_length)] under character_length; prior registration was null
2023-07-09 07:36:10,161 [main] DEBUG SqmFunctionRegistry - Registering alternate key : length -> character_length
2023-07-09 07:36:10,161 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LocatePositionEmulation@6bf0f70a] under position; prior registration was null
2023-07-09 07:36:10,161 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.InsertSubstringOverlayEmulation@1827fc4e] under overlay; prior registration was null
2023-07-09 07:36:10,161 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TrimFunction@644947ee] under trim; prior registration was null
2023-07-09 07:36:10,161 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastFunction@78e043e4] under cast; prior registration was null
2023-07-09 07:36:10,167 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@4fc3529] under collate; prior registration was null
2023-07-09 07:36:10,167 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.ExtractFunction@2965dd88] under extract; prior registration was null
2023-07-09 07:36:10,167 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(least)] under least; prior registration was null
2023-07-09 07:36:10,167 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(greatest)] under greatest; prior registration was null
2023-07-09 07:36:10,167 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CoalesceIfnullEmulation@35ceec81] under ifnull; prior registration was null
2023-07-09 07:36:10,167 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lpad)] under lpad; prior registration was null
2023-07-09 07:36:10,167 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rpad)] under rpad; prior registration was null
2023-07-09 07:36:10,167 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LpadRpadPadEmulation@be616f0] under pad; prior registration was null
2023-07-09 07:36:10,167 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastStrEmulation@ca2be53] under str; prior registration was null
2023-07-09 07:36:10,167 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.FormatFunction@70ee1963] under format; prior registration was null
2023-07-09 07:36:10,171 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampaddFunction@12be4f83] under timestampadd; prior registration was null
2023-07-09 07:36:10,171 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampdiffFunction@2152fde5] under timestampdiff; prior registration was null
2023-07-09 07:36:10,171 [main] DEBUG SqmFunctionRegistry - Registering alternate key : dateadd -> timestampadd
2023-07-09 07:36:10,171 [main] DEBUG SqmFunctionRegistry - Registering alternate key : datediff -> timestampdiff
2023-07-09 07:36:10,171 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@21540255] under current_date; prior registration was null
2023-07-09 07:36:10,171 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@3a7469ca] under current_time; prior registration was null
2023-07-09 07:36:10,171 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@1c8e8fed] under current_timestamp; prior registration was null
2023-07-09 07:36:10,171 [main] DEBUG SqmFunctionRegistry - Registering alternate key : current date -> current_date
2023-07-09 07:36:10,171 [main] DEBUG SqmFunctionRegistry - Registering alternate key : current time -> current_time
2023-07-09 07:36:10,171 [main] DEBUG SqmFunctionRegistry - Registering alternate key : current timestamp -> current_timestamp
2023-07-09 07:36:10,171 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@70f98f7a] under local_date; prior registration was null
2023-07-09 07:36:10,171 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@713e7d9a] under local_time; prior registration was null
2023-07-09 07:36:10,171 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@681d704e] under local_datetime; prior registration was null
2023-07-09 07:36:10,171 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@846b47] under offset_datetime; prior registration was null
2023-07-09 07:36:10,171 [main] DEBUG SqmFunctionRegistry - Registering alternate key : local date -> local_date
2023-07-09 07:36:10,171 [main] DEBUG SqmFunctionRegistry - Registering alternate key : local time -> local_time
2023-07-09 07:36:10,171 [main] DEBUG SqmFunctionRegistry - Registering alternate key : local datetime -> local_datetime
2023-07-09 07:36:10,171 [main] DEBUG SqmFunctionRegistry - Registering alternate key : offset datetime -> offset_datetime
2023-07-09 07:36:10,171 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@3c3ab672] under instant; prior registration was null
2023-07-09 07:36:10,171 [main] DEBUG SqmFunctionRegistry - Registering alternate key : current_instant -> instant
2023-07-09 07:36:10,171 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.SqlFunction@77eb607e] under sql; prior registration was null
2023-07-09 07:36:10,172 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(max)] under max; prior registration was NamedSqmFunctionTemplate(max)
2023-07-09 07:36:10,172 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(min)] under min; prior registration was NamedSqmFunctionTemplate(min)
2023-07-09 07:36:10,172 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sum)] under sum; prior registration was NamedSqmFunctionTemplate(sum)
2023-07-09 07:36:10,172 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(avg)] under avg; prior registration was NamedSqmFunctionTemplate(avg)
2023-07-09 07:36:10,172 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CountFunction@1f1fbc9f] under count; prior registration was org.hibernate.dialect.function.CountFunction@53ba25ff
2023-07-09 07:36:10,172 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.AvgFunction@1e258d3b] under avg; prior registration was NamedSqmFunctionTemplate(avg)
2023-07-09 07:36:10,172 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(pi)] under pi; prior registration was null
2023-07-09 07:36:10,172 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cot)] under cot; prior registration was null
2023-07-09 07:36:10,172 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(radians)] under radians; prior registration was null
2023-07-09 07:36:10,172 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(degrees)] under degrees; prior registration was null
2023-07-09 07:36:10,172 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log10)] under log10; prior registration was null
2023-07-09 07:36:10,172 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rand)] under rand; prior registration was null
2023-07-09 07:36:10,172 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(truncate)] under truncate; prior registration was null
2023-07-09 07:36:10,172 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(soundex)] under soundex; prior registration was null
2023-07-09 07:36:10,172 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(translate)] under translate; prior registration was null
2023-07-09 07:36:10,172 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bitand)] under bitand; prior registration was null
2023-07-09 07:36:10,172 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bitor)] under bitor; prior registration was null
2023-07-09 07:36:10,172 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bitxor)] under bitxor; prior registration was null
2023-07-09 07:36:10,172 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_and)] under bit_and; prior registration was null
2023-07-09 07:36:10,172 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_or)] under bit_or; prior registration was null
2023-07-09 07:36:10,172 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(day)] under day; prior registration was null
2023-07-09 07:36:10,172 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(month)] under month; prior registration was null
2023-07-09 07:36:10,172 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(year)] under year; prior registration was null
2023-07-09 07:36:10,172 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(hour)] under hour; prior registration was null
2023-07-09 07:36:10,172 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(minute)] under minute; prior registration was null
2023-07-09 07:36:10,172 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(second)] under second; prior registration was null
2023-07-09 07:36:10,172 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(microsecond)] under microsecond; prior registration was null
2023-07-09 07:36:10,172 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(day_of_week)] under day_of_week; prior registration was null
2023-07-09 07:36:10,172 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(day_of_month)] under day_of_month; prior registration was null
2023-07-09 07:36:10,172 [main] DEBUG SqmFunctionRegistry - Registering alternate key : day -> day_of_month
2023-07-09 07:36:10,172 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(day_of_year)] under day_of_year; prior registration was null
2023-07-09 07:36:10,172 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(week)] under week; prior registration was null
2023-07-09 07:36:10,172 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(quarter)] under quarter; prior registration was null
2023-07-09 07:36:10,172 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(monthname)] under monthname; prior registration was null
2023-07-09 07:36:10,172 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayname)] under dayname; prior registration was null
2023-07-09 07:36:10,172 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under localtime; prior registration was null
2023-07-09 07:36:10,172 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under localtimestamp; prior registration was null
2023-07-09 07:36:10,172 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under local_time; prior registration was org.hibernate.dialect.function.CurrentFunction@713e7d9a
2023-07-09 07:36:10,172 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under local_datetime; prior registration was org.hibernate.dialect.function.CurrentFunction@681d704e
2023-07-09 07:36:10,172 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_length)] under bit_length; prior registration was null
2023-07-09 07:36:10,172 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(octet_length)] under octet_length; prior registration was null
2023-07-09 07:36:10,172 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ascii)] under ascii; prior registration was null
2023-07-09 07:36:10,172 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(octet_length)] under octet_length; prior registration was NamedSqmFunctionTemplate(octet_length)
2023-07-09 07:36:10,172 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(space)] under space; prior registration was null
2023-07-09 07:36:10,172 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(repeat)] under repeat; prior registration was null
2023-07-09 07:36:10,172 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(char)] under char; prior registration was null
2023-07-09 07:36:10,172 [main] DEBUG SqmFunctionRegistry - Registering alternate key : chr -> char
2023-07-09 07:36:10,172 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(instr)] under instr; prior registration was null
2023-07-09 07:36:10,172 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substr)] under substr; prior registration was null
2023-07-09 07:36:10,172 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@2b6fcca1] under position; prior registration was org.hibernate.dialect.function.LocatePositionEmulation@6bf0f70a
2023-07-09 07:36:10,172 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ltrim)] under ltrim; prior registration was null
2023-07-09 07:36:10,172 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rtrim)] under rtrim; prior registration was null
2023-07-09 07:36:10,172 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@39f93225] under concat; prior registration was NamedSqmFunctionTemplate(concat)
2023-07-09 07:36:10,172 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(curtime)] under curtime; prior registration was null
2023-07-09 07:36:10,172 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(curdate)] under curdate; prior registration was null
2023-07-09 07:36:10,172 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(now)] under now; prior registration was null
2023-07-09 07:36:10,172 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sysdate)] under sysdate; prior registration was null
2023-07-09 07:36:10,172 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(insert)] under insert; prior registration was null
2023-07-09 07:36:10,172 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bool_and)] under bool_and; prior registration was null
2023-07-09 07:36:10,172 [main] DEBUG SqmFunctionRegistry - Registering alternate key : every -> bool_and
2023-07-09 07:36:10,172 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bool_or)] under bool_or; prior registration was null
2023-07-09 07:36:10,172 [main] DEBUG SqmFunctionRegistry - Registering alternate key : any -> bool_or
2023-07-09 07:36:10,172 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(median)] under median; prior registration was null
2023-07-09 07:36:10,172 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_pop)] under stddev_pop; prior registration was null
2023-07-09 07:36:10,172 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_samp)] under stddev_samp; prior registration was null
2023-07-09 07:36:10,172 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_pop)] under var_pop; prior registration was null
2023-07-09 07:36:10,172 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_samp)] under var_samp; prior registration was null
2023-07-09 07:36:10,172 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.FormatFunction@24b3f778] under format; prior registration was org.hibernate.dialect.function.FormatFunction@70ee1963
2023-07-09 07:36:10,172 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rownum)] under rownum; prior registration was null
2023-07-09 07:36:10,172 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(row_number)] under row_number; prior registration was null
2023-07-09 07:36:10,172 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lag)] under lag; prior registration was null
2023-07-09 07:36:10,172 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lead)] under lead; prior registration was null
2023-07-09 07:36:10,172 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(first_value)] under first_value; prior registration was null
2023-07-09 07:36:10,172 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(last_value)] under last_value; prior registration was null
2023-07-09 07:36:10,172 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(nth_value)] under nth_value; prior registration was null
2023-07-09 07:36:10,172 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.ListaggFunction@42a05533] under listagg; prior registration was null
2023-07-09 07:36:10,172 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.InverseDistributionFunction@4ef8090b] under mode; prior registration was null
2023-07-09 07:36:10,172 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.InverseDistributionFunction@6d31f14] under percentile_cont; prior registration was null
2023-07-09 07:36:10,172 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.InverseDistributionFunction@404009df] under percentile_disc; prior registration was null
2023-07-09 07:36:10,172 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@25216999] under rank; prior registration was null
2023-07-09 07:36:10,172 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@77e6761f] under dense_rank; prior registration was null
2023-07-09 07:36:10,172 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@5c997de8] under percent_rank; prior registration was null
2023-07-09 07:36:10,172 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@45bf93bb] under cume_dist; prior registration was null
2023-07-09 07:36:10,172 [main] DEBUG HQL_FUNCTIONS - abs(NUMERIC arg)
2023-07-09 07:36:10,172 [main] DEBUG HQL_FUNCTIONS - Double acos(NUMERIC arg)
2023-07-09 07:36:10,172 [main] DEBUG HQL_FUNCTIONS - Boolean any(BOOLEAN arg)
2023-07-09 07:36:10,172 [main] DEBUG HQL_FUNCTIONS - Integer ascii(STRING arg)
2023-07-09 07:36:10,172 [main] DEBUG HQL_FUNCTIONS - Double asin(NUMERIC arg)
2023-07-09 07:36:10,172 [main] DEBUG HQL_FUNCTIONS - Double atan(NUMERIC arg)
2023-07-09 07:36:10,172 [main] DEBUG HQL_FUNCTIONS - Double atan2(NUMERIC arg0, NUMERIC arg1)
2023-07-09 07:36:10,172 [main] DEBUG HQL_FUNCTIONS - Double avg(NUMERIC arg)
2023-07-09 07:36:10,172 [main] DEBUG HQL_FUNCTIONS - bit_and(arg)
2023-07-09 07:36:10,172 [main] DEBUG HQL_FUNCTIONS - Integer bit_length(STRING_OR_CLOB arg)
2023-07-09 07:36:10,172 [main] DEBUG HQL_FUNCTIONS - bit_or(arg)
2023-07-09 07:36:10,172 [main] DEBUG HQL_FUNCTIONS - bitand(arg0, arg1)
2023-07-09 07:36:10,172 [main] DEBUG HQL_FUNCTIONS - bitor(arg0, arg1)
2023-07-09 07:36:10,172 [main] DEBUG HQL_FUNCTIONS - bitxor(arg0, arg1)
2023-07-09 07:36:10,172 [main] DEBUG HQL_FUNCTIONS - Boolean bool_and(BOOLEAN predicate)
2023-07-09 07:36:10,172 [main] DEBUG HQL_FUNCTIONS - Boolean bool_or(BOOLEAN predicate)
2023-07-09 07:36:10,172 [main] DEBUG HQL_FUNCTIONS - cast(arg as Type)
2023-07-09 07:36:10,172 [main] DEBUG HQL_FUNCTIONS - ceiling(NUMERIC arg)
2023-07-09 07:36:10,172 [main] DEBUG HQL_FUNCTIONS - Character char(INTEGER arg)
2023-07-09 07:36:10,172 [main] DEBUG HQL_FUNCTIONS - Integer character_length(STRING_OR_CLOB arg)
2023-07-09 07:36:10,172 [main] DEBUG HQL_FUNCTIONS - coalesce(arg0[, arg1[, ...]])
2023-07-09 07:36:10,172 [main] DEBUG HQL_FUNCTIONS - String collate(STRING string as COLLATION collation)
2023-07-09 07:36:10,172 [main] DEBUG HQL_FUNCTIONS - String concat(STRING string0[, STRING string1[, ...]])
2023-07-09 07:36:10,172 [main] DEBUG HQL_FUNCTIONS - Double cos(NUMERIC arg)
2023-07-09 07:36:10,172 [main] DEBUG HQL_FUNCTIONS - Double cot(NUMERIC arg)
2023-07-09 07:36:10,172 [main] DEBUG HQL_FUNCTIONS - Long count([distinct ]{arg|*})
2023-07-09 07:36:10,172 [main] DEBUG HQL_FUNCTIONS - Double cume_dist([arg0[, ...]])
2023-07-09 07:36:10,172 [main] DEBUG HQL_FUNCTIONS - Date curdate()
2023-07-09 07:36:10,172 [main] DEBUG HQL_FUNCTIONS - Date current_date
2023-07-09 07:36:10,172 [main] DEBUG HQL_FUNCTIONS - Time current_time
2023-07-09 07:36:10,172 [main] DEBUG HQL_FUNCTIONS - Timestamp current_timestamp
2023-07-09 07:36:10,172 [main] DEBUG HQL_FUNCTIONS - Time curtime()
2023-07-09 07:36:10,172 [main] DEBUG HQL_FUNCTIONS - Integer day(DATE arg)
2023-07-09 07:36:10,172 [main] DEBUG HQL_FUNCTIONS - Integer day_of_month(DATE arg)
2023-07-09 07:36:10,172 [main] DEBUG HQL_FUNCTIONS - Integer day_of_week(DATE arg)
2023-07-09 07:36:10,172 [main] DEBUG HQL_FUNCTIONS - Integer day_of_year(DATE arg)
2023-07-09 07:36:10,172 [main] DEBUG HQL_FUNCTIONS - String dayname(DATE arg)
2023-07-09 07:36:10,172 [main] DEBUG HQL_FUNCTIONS - Double degrees(NUMERIC arg)
2023-07-09 07:36:10,172 [main] DEBUG HQL_FUNCTIONS - Long dense_rank([arg0[, ...]])
2023-07-09 07:36:10,172 [main] DEBUG HQL_FUNCTIONS - Boolean every(BOOLEAN arg)
2023-07-09 07:36:10,172 [main] DEBUG HQL_FUNCTIONS - Double exp(NUMERIC arg)
2023-07-09 07:36:10,172 [main] DEBUG HQL_FUNCTIONS - extract(TEMPORAL_UNIT field from TEMPORAL arg)
2023-07-09 07:36:10,172 [main] DEBUG HQL_FUNCTIONS - first_valueANY value
2023-07-09 07:36:10,172 [main] DEBUG HQL_FUNCTIONS - floor(NUMERIC arg)
2023-07-09 07:36:10,172 [main] DEBUG HQL_FUNCTIONS - String format(TEMPORAL datetime as STRING pattern)
2023-07-09 07:36:10,172 [main] DEBUG HQL_FUNCTIONS - greatest(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]])
2023-07-09 07:36:10,172 [main] DEBUG HQL_FUNCTIONS - Integer hour(TIME arg)
2023-07-09 07:36:10,172 [main] DEBUG HQL_FUNCTIONS - ifnull(arg0, arg1)
2023-07-09 07:36:10,172 [main] DEBUG HQL_FUNCTIONS - String insert(STRING string, INTEGER start, INTEGER length, STRING replacement)
2023-07-09 07:36:10,172 [main] DEBUG HQL_FUNCTIONS - Instant instant
2023-07-09 07:36:10,172 [main] DEBUG HQL_FUNCTIONS - Integer instr(STRING string, STRING pattern[, INTEGER start[, INTEGER occurrence]])
2023-07-09 07:36:10,172 [main] DEBUG HQL_FUNCTIONS - lagANY value[, INTEGER offset[, ANY default]]
2023-07-09 07:36:10,172 [main] DEBUG HQL_FUNCTIONS - last_valueANY value
2023-07-09 07:36:10,172 [main] DEBUG HQL_FUNCTIONS - leadANY value[, INTEGER offset[, ANY default]]
2023-07-09 07:36:10,172 [main] DEBUG HQL_FUNCTIONS - least(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]])
2023-07-09 07:36:10,172 [main] DEBUG HQL_FUNCTIONS - String left(STRING string, INTEGER length)
2023-07-09 07:36:10,172 [main] DEBUG HQL_FUNCTIONS - String listagg(STRING arg0, STRING arg1)
2023-07-09 07:36:10,172 [main] DEBUG HQL_FUNCTIONS - Double ln(NUMERIC arg)
2023-07-09 07:36:10,172 [main] DEBUG HQL_FUNCTIONS - LocalDate local_date
2023-07-09 07:36:10,172 [main] DEBUG HQL_FUNCTIONS - LocalDateTime local_datetime
2023-07-09 07:36:10,172 [main] DEBUG HQL_FUNCTIONS - LocalTime local_time
2023-07-09 07:36:10,172 [main] DEBUG HQL_FUNCTIONS - Time localtime
2023-07-09 07:36:10,172 [main] DEBUG HQL_FUNCTIONS - Timestamp localtimestamp
2023-07-09 07:36:10,172 [main] DEBUG HQL_FUNCTIONS - Integer locate(STRING pattern, STRING string[, INTEGER start])
2023-07-09 07:36:10,172 [main] DEBUG HQL_FUNCTIONS - Double log10(NUMERIC arg)
2023-07-09 07:36:10,172 [main] DEBUG HQL_FUNCTIONS - String lower(STRING string)
2023-07-09 07:36:10,172 [main] DEBUG HQL_FUNCTIONS - String lpad(STRING string, INTEGER length[, STRING padding])
2023-07-09 07:36:10,172 [main] DEBUG HQL_FUNCTIONS - String ltrim(STRING string)
2023-07-09 07:36:10,172 [main] DEBUG HQL_FUNCTIONS - max(COMPARABLE arg)
2023-07-09 07:36:10,172 [main] DEBUG HQL_FUNCTIONS - Double median(NUMERIC arg)
2023-07-09 07:36:10,172 [main] DEBUG HQL_FUNCTIONS - Integer microsecond(TIME arg)
2023-07-09 07:36:10,172 [main] DEBUG HQL_FUNCTIONS - min(COMPARABLE arg)
2023-07-09 07:36:10,172 [main] DEBUG HQL_FUNCTIONS - Integer minute(TIME arg)
2023-07-09 07:36:10,172 [main] DEBUG HQL_FUNCTIONS - Integer mod(INTEGER arg0, INTEGER arg1)
2023-07-09 07:36:10,172 [main] DEBUG HQL_FUNCTIONS - mode()
2023-07-09 07:36:10,172 [main] DEBUG HQL_FUNCTIONS - Integer month(DATE arg)
2023-07-09 07:36:10,172 [main] DEBUG HQL_FUNCTIONS - String monthname(DATE arg)
2023-07-09 07:36:10,172 [main] DEBUG HQL_FUNCTIONS - Timestamp now()
2023-07-09 07:36:10,172 [main] DEBUG HQL_FUNCTIONS - nth_valueANY value, INTEGER nth
2023-07-09 07:36:10,172 [main] DEBUG HQL_FUNCTIONS - nullif(arg0, arg1)
2023-07-09 07:36:10,172 [main] DEBUG HQL_FUNCTIONS - Integer octet_length(STRING_OR_CLOB arg)
2023-07-09 07:36:10,172 [main] DEBUG HQL_FUNCTIONS - OffsetDateTime offset_datetime
2023-07-09 07:36:10,172 [main] DEBUG HQL_FUNCTIONS - String overlay(STRING string placing STRING replacement from INTEGER start[ for INTEGER length])
2023-07-09 07:36:10,172 [main] DEBUG HQL_FUNCTIONS - String pad(STRING string with INTEGER length {leading|trailing}[ STRING character])
2023-07-09 07:36:10,172 [main] DEBUG HQL_FUNCTIONS - Double percent_rank([arg0[, ...]])
2023-07-09 07:36:10,172 [main] DEBUG HQL_FUNCTIONS - percentile_cont(NUMERIC arg)
2023-07-09 07:36:10,172 [main] DEBUG HQL_FUNCTIONS - percentile_disc(NUMERIC arg)
2023-07-09 07:36:10,172 [main] DEBUG HQL_FUNCTIONS - Double pi()
2023-07-09 07:36:10,172 [main] DEBUG HQL_FUNCTIONS - Integer position(STRING pattern in STRING string)
2023-07-09 07:36:10,172 [main] DEBUG HQL_FUNCTIONS - Double power(NUMERIC arg0, NUMERIC arg1)
2023-07-09 07:36:10,172 [main] DEBUG HQL_FUNCTIONS - Integer quarter(DATE arg)
2023-07-09 07:36:10,172 [main] DEBUG HQL_FUNCTIONS - Double radians(NUMERIC arg)
2023-07-09 07:36:10,172 [main] DEBUG HQL_FUNCTIONS - Double rand([INTEGER seed])
2023-07-09 07:36:10,172 [main] DEBUG HQL_FUNCTIONS - Long rank([arg0[, ...]])
2023-07-09 07:36:10,172 [main] DEBUG HQL_FUNCTIONS - String repeat(STRING string, INTEGER times)
2023-07-09 07:36:10,172 [main] DEBUG HQL_FUNCTIONS - String replace(STRING string, STRING pattern, STRING replacement)
2023-07-09 07:36:10,172 [main] DEBUG HQL_FUNCTIONS - String right(STRING string, INTEGER length)
2023-07-09 07:36:10,172 [main] DEBUG HQL_FUNCTIONS - round(NUMERIC arg0, INTEGER arg1)
2023-07-09 07:36:10,172 [main] DEBUG HQL_FUNCTIONS - Long row_number()
2023-07-09 07:36:10,172 [main] DEBUG HQL_FUNCTIONS - Long rownum()
2023-07-09 07:36:10,172 [main] DEBUG HQL_FUNCTIONS - String rpad(STRING string, INTEGER length[, STRING padding])
2023-07-09 07:36:10,172 [main] DEBUG HQL_FUNCTIONS - String rtrim(STRING string)
2023-07-09 07:36:10,172 [main] DEBUG HQL_FUNCTIONS - Integer second(TIME arg)
2023-07-09 07:36:10,172 [main] DEBUG HQL_FUNCTIONS - Integer sign(NUMERIC arg)
2023-07-09 07:36:10,172 [main] DEBUG HQL_FUNCTIONS - Double sin(NUMERIC arg)
2023-07-09 07:36:10,172 [main] DEBUG HQL_FUNCTIONS - String soundex(arg)
2023-07-09 07:36:10,172 [main] DEBUG HQL_FUNCTIONS - String space(INTEGER arg)
2023-07-09 07:36:10,172 [main] DEBUG HQL_FUNCTIONS - Object sql
2023-07-09 07:36:10,172 [main] DEBUG HQL_FUNCTIONS - Double sqrt(NUMERIC arg)
2023-07-09 07:36:10,172 [main] DEBUG HQL_FUNCTIONS - Double stddev_pop(NUMERIC arg)
2023-07-09 07:36:10,172 [main] DEBUG HQL_FUNCTIONS - Double stddev_samp(NUMERIC arg)
2023-07-09 07:36:10,172 [main] DEBUG HQL_FUNCTIONS - String str(arg)
2023-07-09 07:36:10,172 [main] DEBUG HQL_FUNCTIONS - String substr(STRING string, INTEGER start[, INTEGER length])
2023-07-09 07:36:10,172 [main] DEBUG HQL_FUNCTIONS - String substring(STRING string{ from|,} INTEGER start[{ for|,} INTEGER length])
2023-07-09 07:36:10,172 [main] DEBUG HQL_FUNCTIONS - sum(arg)
2023-07-09 07:36:10,172 [main] DEBUG HQL_FUNCTIONS - Timestamp sysdate
2023-07-09 07:36:10,172 [main] DEBUG HQL_FUNCTIONS - Double tan(NUMERIC arg)
2023-07-09 07:36:10,172 [main] DEBUG HQL_FUNCTIONS - timestampadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime)
2023-07-09 07:36:10,172 [main] DEBUG HQL_FUNCTIONS - basicType@11(java.lang.Long,-5)|basicType@15(java.lang.Double,6) timestampdiff(TEMPORAL_UNIT field, TEMPORAL start, TEMPORAL end)
2023-07-09 07:36:10,172 [main] DEBUG HQL_FUNCTIONS - String translate(STRING arg0, STRING arg1, STRING arg2)
2023-07-09 07:36:10,172 [main] DEBUG HQL_FUNCTIONS - String trim([[{leading|trailing|both} ][STRING arg0 ]from] STRING arg1)
2023-07-09 07:36:10,172 [main] DEBUG HQL_FUNCTIONS - Double truncate(NUMERIC number, INTEGER places)
2023-07-09 07:36:10,172 [main] DEBUG HQL_FUNCTIONS - String upper(STRING string)
2023-07-09 07:36:10,172 [main] DEBUG HQL_FUNCTIONS - Double var_pop(NUMERIC arg)
2023-07-09 07:36:10,172 [main] DEBUG HQL_FUNCTIONS - Double var_samp(NUMERIC arg)
2023-07-09 07:36:10,172 [main] DEBUG HQL_FUNCTIONS - Integer week(DATE arg)
2023-07-09 07:36:10,172 [main] DEBUG HQL_FUNCTIONS - Integer year(DATE arg)
2023-07-09 07:36:10,172 [main] DEBUG HQL_FUNCTIONS - Boolean any(BOOLEAN predicate)
2023-07-09 07:36:10,172 [main] DEBUG HQL_FUNCTIONS - Character chr(INTEGER arg)
2023-07-09 07:36:10,172 [main] DEBUG HQL_FUNCTIONS - Date current date
2023-07-09 07:36:10,172 [main] DEBUG HQL_FUNCTIONS - Time current time
2023-07-09 07:36:10,172 [main] DEBUG HQL_FUNCTIONS - Timestamp current timestamp
2023-07-09 07:36:10,172 [main] DEBUG HQL_FUNCTIONS - Instant current_instant
2023-07-09 07:36:10,172 [main] DEBUG HQL_FUNCTIONS - dateadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime)
2023-07-09 07:36:10,172 [main] DEBUG HQL_FUNCTIONS - basicType@11(java.lang.Long,-5)|basicType@15(java.lang.Double,6) datediff(TEMPORAL_UNIT field, TEMPORAL start, TEMPORAL end)
2023-07-09 07:36:10,172 [main] DEBUG HQL_FUNCTIONS - Integer day(DATE arg)
2023-07-09 07:36:10,172 [main] DEBUG HQL_FUNCTIONS - Boolean every(BOOLEAN predicate)
2023-07-09 07:36:10,172 [main] DEBUG HQL_FUNCTIONS - Integer length(STRING_OR_CLOB arg)
2023-07-09 07:36:10,172 [main] DEBUG HQL_FUNCTIONS - LocalDate local date
2023-07-09 07:36:10,172 [main] DEBUG HQL_FUNCTIONS - LocalDateTime local datetime
2023-07-09 07:36:10,172 [main] DEBUG HQL_FUNCTIONS - LocalTime local time
2023-07-09 07:36:10,172 [main] DEBUG HQL_FUNCTIONS - OffsetDateTime offset datetime
2023-07-09 07:36:10,172 [main] DEBUG TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@4d290757] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@39b85a73]
2023-07-09 07:36:10,221 [main] DEBUG ClassLoaderAccessImpl - Not known whether passed class name [io.github.nishadchayanakhawa.intellidash.model.User] is safe
2023-07-09 07:36:10,221 [main] DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : io.github.nishadchayanakhawa.intellidash.model.User
2023-07-09 07:36:10,362 [main] DEBUG creation - Starting post-init callbacks
2023-07-09 07:36:10,362 [main] DEBUG creation - Starting PostInitCallbackEntry : Entity(io.github.nishadchayanakhawa.intellidash.model.User) `staticFetchableList` generator
2023-07-09 07:36:10,362 [main] DEBUG AbstractEntityPersister - Static SQL for entity: io.github.nishadchayanakhawa.intellidash.model.User
2023-07-09 07:36:10,362 [main] DEBUG AbstractEntityPersister -  Version select: select username from users where username =?
2023-07-09 07:36:10,362 [main] DEBUG AbstractEntityPersister -  Insert 0: insert into users (email, first_name, last_name, password, role, username) values (?, ?, ?, ?, ?, ?)
2023-07-09 07:36:10,362 [main] DEBUG AbstractEntityPersister -  Update 0: update users set email=?, first_name=?, last_name=?, password=?, role=? where username=?
2023-07-09 07:36:10,362 [main] DEBUG AbstractEntityPersister -  Delete 0: delete from users where username=?
2023-07-09 07:36:10,375 [main] DEBUG create - Created new SQL alias : u1_0
2023-07-09 07:36:10,375 [main] DEBUG create - Registration of TableGroup [StandardTableGroup(io.github.nishadchayanakhawa.intellidash.model.User)] with identifierForTableGroup [io.github.nishadchayanakhawa.intellidash.model.User] for NavigablePath [io.github.nishadchayanakhawa.intellidash.model.User] 
2023-07-09 07:36:10,392 [main] DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [io.github.nishadchayanakhawa.intellidash.model.User]
 |  +-BasicFetch [io.github.nishadchayanakhawa.intellidash.model.User.email]
 |  +-BasicFetch [io.github.nishadchayanakhawa.intellidash.model.User.firstName]
 |  +-BasicFetch [io.github.nishadchayanakhawa.intellidash.model.User.lastName]
 |  +-BasicFetch [io.github.nishadchayanakhawa.intellidash.model.User.password]
 |  \-BasicFetch [io.github.nishadchayanakhawa.intellidash.model.User.role]

2023-07-09 07:36:10,392 [main] DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (u1 : io.github.nishadchayanakhawa.intellidash.model.User) {
          primaryTableReference : users as u1_0
        }
      }
    }

2023-07-09 07:36:10,413 [main] DEBUG NamedObjectRepository - Checking 0 named HQL queries
2023-07-09 07:36:10,413 [main] DEBUG NamedObjectRepository - Checking 0 named SQL queries
2023-07-09 07:36:10,443 [main] DEBUG SQL - create table users (username varchar(255) not null, email varchar(255), first_name varchar(255), last_name varchar(255), password varchar(255), role smallint, primary key (username))
2023-07-09 07:36:10,443 [main] DEBUG SessionFactoryServiceRegistryImpl - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
2023-07-09 07:36:10,443 [main] DEBUG EntityCopyObserverFactoryInitiator - Configured EntityCopyObserver strategy: disallow
2023-07-09 07:36:10,454 [main] DEBUG SessionFactoryRegistry - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@5c9e6d95
2023-07-09 07:36:10,454 [main] DEBUG SessionFactoryRegistry - Registering SessionFactory: 59faf48a-1885-43c0-8f43-d255451d6211 (<unnamed>)
2023-07-09 07:36:10,454 [main] DEBUG SessionFactoryRegistry - Not binding SessionFactory to JNDI, no JNDI name configured
2023-07-09 07:36:10,534 [main] DEBUG StatisticsInitiator - Statistics initialized [enabled=false]
2023-07-09 07:36:10,614 [main] DEBUG JdbcResourceLocalTransactionCoordinatorImpl - JDBC transaction marked for rollback-only (exception provided for stack trace)
java.lang.Exception: exception just for purpose of providing stack trace
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.markRollbackOnly(JdbcResourceLocalTransactionCoordinatorImpl.java:324)
	at org.hibernate.internal.AbstractSharedSessionContract.buildNamedQuery(AbstractSharedSessionContract.java:1003)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:866)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:126)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.orm.jpa.ExtendedEntityManagerCreator$ExtendedEntityManagerInvocationHandler.invoke(ExtendedEntityManagerCreator.java:360)
	at jdk.proxy2/jdk.proxy2.$Proxy100.createNamedQuery(Unknown Source)
	at org.springframework.data.jpa.repository.query.NamedQuery.hasNamedQuery(NamedQuery.java:115)
	at org.springframework.data.jpa.repository.query.NamedQuery.lookupFrom(NamedQuery.java:144)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$DeclaredQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:180)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$CreateIfNotFoundQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:252)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$AbstractQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:95)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lookupQuery(QueryExecutorMethodInterceptor.java:111)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.mapMethodsToQuery(QueryExecutorMethodInterceptor.java:99)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lambda$new$0(QueryExecutorMethodInterceptor.java:88)
	at java.base/java.util.Optional.map(Optional.java:260)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.<init>(QueryExecutorMethodInterceptor.java:88)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport.getRepository(RepositoryFactorySupport.java:357)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.lambda$afterPropertiesSet$5(RepositoryFactoryBeanSupport.java:279)
	at org.springframework.data.util.Lazy.getNullable(Lazy.java:245)
	at org.springframework.data.util.Lazy.get(Lazy.java:114)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.afterPropertiesSet(RepositoryFactoryBeanSupport.java:285)
	at org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean.afterPropertiesSet(JpaRepositoryFactoryBean.java:132)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1816)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1766)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:598)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:520)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:326)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:324)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1417)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1337)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:710)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:693)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:133)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:482)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1416)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:597)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:520)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:326)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:324)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1417)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1337)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:710)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:693)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:133)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:482)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1416)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:597)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:520)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:326)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:324)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:973)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:917)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:584)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:732)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:434)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:310)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1304)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1293)
	at io.github.nishadchayanakhawa.intellidash.IntelliDashApplication.main(IntelliDashApplication.java:9)
2023-07-09 07:36:10,789 [main] DEBUG Mappings - 
	o.s.b.a.w.s.e.BasicErrorController:
	{ [/error]}: error(HttpServletRequest)
	{ [/error], produces [text/html]}: errorHtml(HttpServletRequest,HttpServletResponse)
2023-07-09 07:36:10,789 [main] DEBUG Mappings - 'beanNameHandlerMapping' {}
2023-07-09 07:36:10,825 [main] DEBUG Mappings - 'resourceHandlerMapping' {/webjars/**=ResourceHttpRequestHandler [classpath [META-INF/resources/webjars/]], /**=ResourceHttpRequestHandler [classpath [META-INF/resources/], classpath [resources/], classpath [static/], classpath [public/], ServletContext [/]]}
2023-07-09 07:36:11,046 [main] DEBUG TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2023-07-09 07:36:11,046 [main] DEBUG TransactionImpl - begin
2023-07-09 07:36:11,077 [main] DEBUG create - Created new SQL alias : u1_0
2023-07-09 07:36:11,077 [main] DEBUG create - Registration of TableGroup [StandardTableGroup(io.github.nishadchayanakhawa.intellidash.model.User(478060448685400))] with identifierForTableGroup [io.github.nishadchayanakhawa.intellidash.model.User] for NavigablePath [io.github.nishadchayanakhawa.intellidash.model.User] 
2023-07-09 07:36:11,087 [main] DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [io.github.nishadchayanakhawa.intellidash.model.User(478060448685400)]
 |  +-BasicFetch [io.github.nishadchayanakhawa.intellidash.model.User(478060448685400).email]
 |  +-BasicFetch [io.github.nishadchayanakhawa.intellidash.model.User(478060448685400).firstName]
 |  +-BasicFetch [io.github.nishadchayanakhawa.intellidash.model.User(478060448685400).lastName]
 |  +-BasicFetch [io.github.nishadchayanakhawa.intellidash.model.User(478060448685400).password]
 |  \-BasicFetch [io.github.nishadchayanakhawa.intellidash.model.User(478060448685400).role]

2023-07-09 07:36:11,087 [main] DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (u1 : io.github.nishadchayanakhawa.intellidash.model.User(478060448685400)) {
          primaryTableReference : users as u1_0
        }
      }
    }

2023-07-09 07:36:11,093 [main] DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2023-07-09 07:36:11,097 [main] DEBUG results - Initializer list
2023-07-09 07:36:11,097 [main] DEBUG results -     io.github.nishadchayanakhawa.intellidash.model.User(478060448685400) -> EntityResultInitializer(io.github.nishadchayanakhawa.intellidash.model.User(478060448685400))@664700395 (SingleTableEntityPersister(io.github.nishadchayanakhawa.intellidash.model.User))
2023-07-09 07:36:11,097 [main] DEBUG SQL - select u1_0.username,u1_0.email,u1_0.first_name,u1_0.last_name,u1_0.password,u1_0.role from users u1_0
2023-07-09 07:36:11,097 [main] DEBUG TransactionImpl - committing
2023-07-09 07:36:11,172 [main] DEBUG TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2023-07-09 07:36:11,172 [main] DEBUG TransactionImpl - begin
2023-07-09 07:36:11,172 [main] DEBUG PersistenceUnitUtilImpl - jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier
2023-07-09 07:36:11,178 [main] DEBUG create - Created new SQL alias : u1_0
2023-07-09 07:36:11,178 [main] DEBUG create - Registration of TableGroup [StandardTableGroup(io.github.nishadchayanakhawa.intellidash.model.User)] with identifierForTableGroup [io.github.nishadchayanakhawa.intellidash.model.User] for NavigablePath [io.github.nishadchayanakhawa.intellidash.model.User] 
2023-07-09 07:36:11,178 [main] DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [io.github.nishadchayanakhawa.intellidash.model.User]
 |  +-BasicFetch [io.github.nishadchayanakhawa.intellidash.model.User.email]
 |  +-BasicFetch [io.github.nishadchayanakhawa.intellidash.model.User.firstName]
 |  +-BasicFetch [io.github.nishadchayanakhawa.intellidash.model.User.lastName]
 |  +-BasicFetch [io.github.nishadchayanakhawa.intellidash.model.User.password]
 |  \-BasicFetch [io.github.nishadchayanakhawa.intellidash.model.User.role]

2023-07-09 07:36:11,178 [main] DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (u1 : io.github.nishadchayanakhawa.intellidash.model.User) {
          primaryTableReference : users as u1_0
        }
      }
    }

2023-07-09 07:36:11,178 [main] DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2023-07-09 07:36:11,188 [main] DEBUG results - Initializer list
2023-07-09 07:36:11,188 [main] DEBUG results -     io.github.nishadchayanakhawa.intellidash.model.User -> EntityResultInitializer(io.github.nishadchayanakhawa.intellidash.model.User)@1451732454 (SingleTableEntityPersister(io.github.nishadchayanakhawa.intellidash.model.User))
2023-07-09 07:36:11,188 [main] DEBUG SQL - select u1_0.username,u1_0.email,u1_0.first_name,u1_0.last_name,u1_0.password,u1_0.role from users u1_0 where u1_0.username=?
2023-07-09 07:36:11,188 [main] DEBUG AbstractSaveEventListener - Generated identifier: admin, using strategy: org.hibernate.id.Assigned
2023-07-09 07:36:11,188 [main] DEBUG TransactionImpl - committing
2023-07-09 07:36:11,188 [main] DEBUG AbstractFlushingEventListener - Processing flush-time cascades
2023-07-09 07:36:11,198 [main] DEBUG AbstractFlushingEventListener - Dirty checking collections
2023-07-09 07:36:11,198 [main] DEBUG AbstractFlushingEventListener - Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects
2023-07-09 07:36:11,198 [main] DEBUG AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2023-07-09 07:36:11,198 [main] DEBUG EntityPrinter - Listing entities:
2023-07-09 07:36:11,198 [main] DEBUG EntityPrinter - io.github.nishadchayanakhawa.intellidash.model.User{firstName=Admin, lastName=LNU, password=$2a$10$MAH9wJPVtLDq1dVelQ.esOKIjm.z8kdYnxoqyohB.kFE8PqTq9KbO, role=ADMIN, email=admin@organization.com, username=admin}
2023-07-09 07:36:11,198 [main] DEBUG SQL - insert into users (email, first_name, last_name, password, role, username) values (?, ?, ?, ?, ?, ?)
2023-07-09 07:36:11,204 [main] DEBUG JdbcCoordinatorImpl - HHH000420: Closing un-released batch
2023-07-09 07:36:11,268 [main] DEBUG TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2023-07-09 07:36:11,269 [main] DEBUG TransactionImpl - begin
2023-07-09 07:36:11,269 [main] DEBUG PersistenceUnitUtilImpl - jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier
2023-07-09 07:36:11,269 [main] DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2023-07-09 07:36:11,269 [main] DEBUG results - Initializer list
2023-07-09 07:36:11,269 [main] DEBUG results -     io.github.nishadchayanakhawa.intellidash.model.User -> EntityResultInitializer(io.github.nishadchayanakhawa.intellidash.model.User)@532986070 (SingleTableEntityPersister(io.github.nishadchayanakhawa.intellidash.model.User))
2023-07-09 07:36:11,269 [main] DEBUG SQL - select u1_0.username,u1_0.email,u1_0.first_name,u1_0.last_name,u1_0.password,u1_0.role from users u1_0 where u1_0.username=?
2023-07-09 07:36:11,269 [main] DEBUG AbstractSaveEventListener - Generated identifier: tester, using strategy: org.hibernate.id.Assigned
2023-07-09 07:36:11,269 [main] DEBUG TransactionImpl - committing
2023-07-09 07:36:11,269 [main] DEBUG AbstractFlushingEventListener - Processing flush-time cascades
2023-07-09 07:36:11,269 [main] DEBUG AbstractFlushingEventListener - Dirty checking collections
2023-07-09 07:36:11,269 [main] DEBUG AbstractFlushingEventListener - Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects
2023-07-09 07:36:11,269 [main] DEBUG AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2023-07-09 07:36:11,269 [main] DEBUG EntityPrinter - Listing entities:
2023-07-09 07:36:11,269 [main] DEBUG EntityPrinter - io.github.nishadchayanakhawa.intellidash.model.User{firstName=Tester, lastName=LNU, password=$2a$10$etbF7sMpnlXegJ4UCO0.W.dVrApk1NabtxK2Xqw8tHtlUocmYS7SO, role=TESTER, email=tester@organization.com, username=tester}
2023-07-09 07:36:11,269 [main] DEBUG SQL - insert into users (email, first_name, last_name, password, role, username) values (?, ?, ?, ?, ?, ?)
2023-07-09 07:36:11,269 [main] DEBUG JdbcCoordinatorImpl - HHH000420: Closing un-released batch
2023-07-09 07:36:11,332 [main] DEBUG TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2023-07-09 07:36:11,332 [main] DEBUG TransactionImpl - begin
2023-07-09 07:36:11,332 [main] DEBUG PersistenceUnitUtilImpl - jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier
2023-07-09 07:36:11,332 [main] DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2023-07-09 07:36:11,332 [main] DEBUG results - Initializer list
2023-07-09 07:36:11,332 [main] DEBUG results -     io.github.nishadchayanakhawa.intellidash.model.User -> EntityResultInitializer(io.github.nishadchayanakhawa.intellidash.model.User)@34782860 (SingleTableEntityPersister(io.github.nishadchayanakhawa.intellidash.model.User))
2023-07-09 07:36:11,332 [main] DEBUG SQL - select u1_0.username,u1_0.email,u1_0.first_name,u1_0.last_name,u1_0.password,u1_0.role from users u1_0 where u1_0.username=?
2023-07-09 07:36:11,332 [main] DEBUG AbstractSaveEventListener - Generated identifier: user, using strategy: org.hibernate.id.Assigned
2023-07-09 07:36:11,332 [main] DEBUG TransactionImpl - committing
2023-07-09 07:36:11,332 [main] DEBUG AbstractFlushingEventListener - Processing flush-time cascades
2023-07-09 07:36:11,332 [main] DEBUG AbstractFlushingEventListener - Dirty checking collections
2023-07-09 07:36:11,332 [main] DEBUG AbstractFlushingEventListener - Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects
2023-07-09 07:36:11,332 [main] DEBUG AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2023-07-09 07:36:11,332 [main] DEBUG EntityPrinter - Listing entities:
2023-07-09 07:36:11,332 [main] DEBUG EntityPrinter - io.github.nishadchayanakhawa.intellidash.model.User{firstName=User, lastName=LNU, password=$2a$10$mwtE46A0JdsH0Xj4oXsEUehzkfT1s8a3Zx6dwvcLiHhTUv1yVFDJS, role=USER, email=user.com, username=user}
2023-07-09 07:36:11,332 [main] DEBUG SQL - insert into users (email, first_name, last_name, password, role, username) values (?, ?, ?, ?, ?, ?)
2023-07-09 07:36:11,332 [main] DEBUG JdbcCoordinatorImpl - HHH000420: Closing un-released batch
2023-07-09 07:36:39,674 [HikariPool-1 housekeeper] DEBUG HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-07-09 07:36:39,674 [HikariPool-1 housekeeper] DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2023-07-09 07:36:51,293 [SpringApplicationShutdownHook] DEBUG SessionFactoryImpl - HHH000031: Closing
2023-07-09 07:36:51,293 [SpringApplicationShutdownHook] DEBUG TypeConfiguration$Scope - Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@3f7c8349] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@39b85a73]
2023-07-09 07:36:51,293 [SpringApplicationShutdownHook] DEBUG AbstractServiceRegistryImpl - Implicitly destroying ServiceRegistry on de-registration of all child ServiceRegistries
2023-07-09 07:36:51,294 [SpringApplicationShutdownHook] DEBUG BootstrapServiceRegistryImpl - Implicitly destroying Boot-strap registry on de-registration of all child ServiceRegistries
2023-07-09 07:36:51,294 [SpringApplicationShutdownHook] DEBUG HikariPool - HikariPool-1 - Before shutdown stats (total=10, active=0, idle=10, waiting=0)
2023-07-09 07:36:51,295 [HikariPool-1 connection closer] DEBUG PoolBase - HikariPool-1 - Closing connection conn0: url=jdbc:h2:mem:9c79471c-cc41-494f-8244-f9d0f5053fab user=ADMIN: (connection evicted)
2023-07-09 07:36:51,295 [HikariPool-1 connection closer] DEBUG PoolBase - HikariPool-1 - Closing connection conn1: url=jdbc:h2:mem:9c79471c-cc41-494f-8244-f9d0f5053fab user=ADMIN: (connection evicted)
2023-07-09 07:36:51,295 [HikariPool-1 connection closer] DEBUG PoolBase - HikariPool-1 - Closing connection conn2: url=jdbc:h2:mem:9c79471c-cc41-494f-8244-f9d0f5053fab user=ADMIN: (connection evicted)
2023-07-09 07:36:51,295 [HikariPool-1 connection closer] DEBUG PoolBase - HikariPool-1 - Closing connection conn3: url=jdbc:h2:mem:9c79471c-cc41-494f-8244-f9d0f5053fab user=ADMIN: (connection evicted)
2023-07-09 07:36:51,295 [HikariPool-1 connection closer] DEBUG PoolBase - HikariPool-1 - Closing connection conn4: url=jdbc:h2:mem:9c79471c-cc41-494f-8244-f9d0f5053fab user=ADMIN: (connection evicted)
2023-07-09 07:36:51,295 [HikariPool-1 connection closer] DEBUG PoolBase - HikariPool-1 - Closing connection conn5: url=jdbc:h2:mem:9c79471c-cc41-494f-8244-f9d0f5053fab user=ADMIN: (connection evicted)
2023-07-09 07:36:51,295 [HikariPool-1 connection closer] DEBUG PoolBase - HikariPool-1 - Closing connection conn6: url=jdbc:h2:mem:9c79471c-cc41-494f-8244-f9d0f5053fab user=ADMIN: (connection evicted)
2023-07-09 07:36:51,295 [HikariPool-1 connection closer] DEBUG PoolBase - HikariPool-1 - Closing connection conn7: url=jdbc:h2:mem:9c79471c-cc41-494f-8244-f9d0f5053fab user=ADMIN: (connection evicted)
2023-07-09 07:36:51,295 [HikariPool-1 connection closer] DEBUG PoolBase - HikariPool-1 - Closing connection conn8: url=jdbc:h2:mem:9c79471c-cc41-494f-8244-f9d0f5053fab user=ADMIN: (connection evicted)
2023-07-09 07:36:51,295 [HikariPool-1 connection closer] DEBUG PoolBase - HikariPool-1 - Closing connection conn9: url=jdbc:h2:mem:9c79471c-cc41-494f-8244-f9d0f5053fab user=ADMIN: (connection evicted)
2023-07-09 07:36:51,295 [SpringApplicationShutdownHook] DEBUG HikariPool - HikariPool-1 - After shutdown stats (total=0, active=0, idle=0, waiting=0)
